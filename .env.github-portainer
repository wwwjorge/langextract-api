# =============================================================================
# LANGEXTRACT API - CONFIGURAÇÃO PARA DEPLOY VIA GITHUB NO PORTAINER
# =============================================================================
# 
# Este arquivo contém as variáveis de ambiente necessárias para deploy
# da LangExtract API via repositório GitHub no Portainer.
#
# INSTRUÇÕES:
# 1. Copie o conteúdo deste arquivo
# 2. Cole na seção "Environment variables" do Portainer
# 3. Substitua os valores de exemplo pelas suas chaves reais
# 4. Remova ou comente as linhas que não precisar
#
# =============================================================================

# -----------------------------------------------------------------------------
# CONFIGURAÇÃO DA API
# -----------------------------------------------------------------------------

# Porta onde a API será executada (padrão: 8000)
LANGEXTRACT_API_PORT=8000

# Chave de API para autenticação (OBRIGATÓRIO)
# Gere uma chave segura: python -c "import secrets; print(secrets.token_urlsafe(32))"
LANGEXTRACT_API_KEY=sua-api-key-super-secreta-aqui

# -----------------------------------------------------------------------------
# CHAVES DOS PROVEDORES DE IA (pelo menos uma é obrigatória)
# -----------------------------------------------------------------------------

# Google Gemini API Key
# Obtenha em: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=sua-gemini-api-key-aqui

# OpenAI API Key  
# Obtenha em: https://platform.openai.com/api-keys
OPENAI_API_KEY=sua-openai-api-key-aqui

# Anthropic Claude API Key (opcional)
# ANTHROPIC_API_KEY=sua-anthropic-api-key-aqui

# -----------------------------------------------------------------------------
# SEGURANÇA JWT
# -----------------------------------------------------------------------------

# Chave secreta para JWT (OBRIGATÓRIO)
# Gere uma chave segura: openssl rand -hex 32
API_SECRET_KEY=sua-chave-jwt-super-secreta-de-32-caracteres

# Algoritmo de criptografia JWT (padrão: HS256)
API_ALGORITHM=HS256

# Tempo de expiração do token em minutos (padrão: 30)
API_ACCESS_TOKEN_EXPIRE_MINUTES=30

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES PADRÃO
# -----------------------------------------------------------------------------

# Modelo padrão para extração (padrão: gemini-1.5-flash)
# Opções: gemini-1.5-flash, gemini-1.5-pro, gpt-4o-mini, gpt-4o, claude-3-haiku
DEFAULT_MODEL=gemini-1.5-flash

# Provedor padrão (padrão: gemini)
# Opções: gemini, openai, anthropic
DEFAULT_PROVIDER=gemini

# -----------------------------------------------------------------------------
# LIMITES E PERFORMANCE
# -----------------------------------------------------------------------------

# Tamanho máximo de arquivo em MB (padrão: 50)
MAX_FILE_SIZE_MB=50

# Número máximo de workers para processamento (padrão: 4)
MAX_WORKERS=4

# Nível de log (padrão: INFO)
# Opções: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# -----------------------------------------------------------------------------
# CORS E REDE
# -----------------------------------------------------------------------------

# Origens permitidas para CORS (padrão: *)
# Para produção, especifique domínios: https://meusite.com,https://app.meusite.com
CORS_ORIGINS=*

# -----------------------------------------------------------------------------
# CONFIGURAÇÕES OPCIONAIS AVANÇADAS
# -----------------------------------------------------------------------------

# Timeout para requisições de IA em segundos (padrão: 300)
# AI_REQUEST_TIMEOUT=300

# Número máximo de tentativas em caso de erro (padrão: 3)
# MAX_RETRIES=3

# Intervalo entre tentativas em segundos (padrão: 1)
# RETRY_DELAY=1

# Habilitar cache de respostas (padrão: true)
# ENABLE_CACHE=true

# Tempo de cache em segundos (padrão: 3600 = 1 hora)
# CACHE_TTL=3600

# Habilitar métricas Prometheus (padrão: false)
# ENABLE_METRICS=false

# Porta para métricas Prometheus (padrão: 9090)
# METRICS_PORT=9090

# -----------------------------------------------------------------------------
# EXEMPLO DE CONFIGURAÇÃO MÍNIMA PARA TESTE
# -----------------------------------------------------------------------------
# 
# Se você quer apenas testar rapidamente, use apenas estas variáveis:
# 
# LANGEXTRACT_API_PORT=8000
# LANGEXTRACT_API_KEY=test-api-key-123
# GEMINI_API_KEY=sua-gemini-key
# API_SECRET_KEY=test-jwt-secret-key-muito-longa-e-segura
# 
# -----------------------------------------------------------------------------

# =============================================================================
# NOTAS IMPORTANTES:
# 
# 1. NUNCA commite este arquivo com chaves reais no Git!
# 2. Use chaves diferentes para desenvolvimento e produção
# 3. Mantenha as chaves seguras e rotacione periodicamente
# 4. Para produção, considere usar um gerenciador de secrets
# 5. Monitore o uso das APIs para evitar custos inesperados
# 
# =============================================================================